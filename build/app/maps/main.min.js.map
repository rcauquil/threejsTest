{"version":3,"sources":["base.js"],"names":["init","scene","THREE","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","add","renderer","WebGLRenderer","alpha","antialias","setSize","document","body","appendChild","domElement","effect","StereoEffect","ambientLight","AmbientLight","directionalLight","DirectionalLight","position","set","normalize","materialSimple","MeshLambertMaterial","map","ImageUtils","loadTexture","plane","Mesh","PlaneBufferGeometry","MeshNormalMaterial","overdraw","setWindowSize","aspect","setView","vrMode","updateProjectionMatrix","cameraPos","o","t","x","y","z","lookAt","rotateObj","s","a","b","n","keys","rotation","moveObj","translateY","Player","geometry","BoxGeometry","material","MeshPhongMaterial","f1","Vector2","f2","f3","f4","f5","f6","faceVertexUvs","player","addPlayer","user","socket","id","name","players","obj","_x","_y","_z","animate","requestAnimationFrame","undefined","emit","ctrlObj","speed","render","mode","io","controls","materialf3","cube","currentPlayer","cPlayer","oPlayers","oPositions","addEventListener","e","keyCode","onload","gui","dat","GUI","min","max","step","on","users","remove","script","createElement","stats","Stats","style","cssText","loop","update","src","head"],"mappings":"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","file":"main.min.js","sourcesContent":["// ------------------------------------------\n// VARS\n// ------------------------------------------\n// SOCKET IO\nvar socket = io();\n// THREEJS\nvar scene, camera, renderer, effect;\nvar controls;\nvar materialf3;\nvar ambientLight, directionalLight;\nvar cube;\nvar currentPlayer = false;\nvar setView = {\n  vrMode: false\n};\n// PLAYERS\nvar cPlayer;\nvar oPlayers = {};\nvar oPositions = {};\nvar players = {};\n\n// ------------------------------------------\n// KEYS\n// ------------------------------------------\nvar keys = {};\ndocument.addEventListener('keydown',function(e){keys[e.keyCode]=true;},false);\ndocument.addEventListener('keyup',function(e){keys[e.keyCode]=false;},false);\n\n\n// ------------------------------------------\n// CONTROL VIEW\n// ------------------------------------------\nvar ctrlObj = {\n  rotation: 0.05,\n  speed: 0.6\n};\n\nwindow.onload = function() {\n  var gui = new dat.GUI();\n  // Speed rotation\n  gui.add(ctrlObj, 'rotation').min(0).max(0.1).step(0.01);\n  gui.add(ctrlObj, 'speed').min(0).max(1).step(0.1);\n  // View\n  gui.add(setView, 'vrMode');\n};\n\n// ------------------------------------------\n// INIT\n// ------------------------------------------\nfunction init() {\n\n  scene = new THREE.Scene();\n\n  // CAMERA\n  // ---------------------\n  camera = new THREE.PerspectiveCamera(55, window.innerWidth / window.innerHeight, 0.1, 1000);\n  scene.add(camera);\n\n  // RENDERER\n  // ---------------------\n  renderer = new THREE.WebGLRenderer({\n    alpha: true,\n    antialias: true\n  });\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  document.body.appendChild(renderer.domElement);\n\n  // STEREOSCOPIC\n  // ---------------------\n  effect = new THREE.StereoEffect(renderer);\n\n  // LIGHTS\n  // ---------------------\n  // AMBIENT\n  ambientLight = new THREE.AmbientLight(0xbbbbbb);\n  scene.add(ambientLight);\n  // DIRECTIONAL lighting\n  directionalLight = new THREE.DirectionalLight(0xffffff);\n  directionalLight.position.set(1, 1, 0.5).normalize();\n  scene.add(directionalLight);\n\n  // GEOMETRIES\n  // ---------------------\n\n\n  // MATERIALS\n  // ---------------------\n  // SIMPLE f3\n  materialSimple = new THREE.MeshLambertMaterial({\n    map: THREE.ImageUtils.loadTexture('assets/02-box.jpg')\n  });\n\n  // OBJECTS\n  // ---------------------\n  // PLANE\n  var plane = new THREE.Mesh(new THREE.PlaneBufferGeometry(10, 10), new THREE.MeshNormalMaterial());\n  plane.overdraw = true;\n  scene.add(plane);\n}\n\n\n// ------------------------------------------\n// RESIZE SCREEN\n// ------------------------------------------\nfunction setWindowSize() {\n  camera.aspect = window.innerWidth / window.innerHeight;\n  switch(setView.vrMode) {\n    case false:\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      break;\n    case true:\n      effect.setSize(window.innerWidth, window.innerHeight);\n      break;\n    default:\n      renderer.setSize(window.innerWidth, window.innerHeight);\n  }\n  camera.updateProjectionMatrix();\n}\n\n\n// ------------------------------------------\n// ANIMATE\n// ------------------------------------------\n\n// CAMERA\nfunction cameraPos(o,t) {\n  o.position.x = t.position.x;\n  o.position.y = t.position.y + -30;\n  camera.position.z = 35;\n  camera.lookAt(t.position);\n}\n\n// ROTATE\nfunction rotateObj(o,s,a,b) {\n  var n = (keys[a] ? s : 0) + (keys[b] ? -s : 0);\n  o.rotation.z += n;\n}\n\n// MOVE\nfunction moveObj(o,s,a,b) {\n  var n = (keys[a] ? s : 0) + (keys[b] ? -s : 0);\n  o.translateY(n);\n}\n\n\nfunction Player() {\n  // GEOMETRY\n  var geometry = new THREE.BoxGeometry(5, 5, 5);\n  // UV MAP\n  var material = new THREE.MeshPhongMaterial({\n    map: THREE.ImageUtils.loadTexture('img/box-map.jpg')\n  });\n  var f1 = [new THREE.Vector2(0, 0.666), new THREE.Vector2(0.5, 0.666), new THREE.Vector2(0.5, 1), new THREE.Vector2(0, 1)];\n  var f2 = [new THREE.Vector2(0.5, 0.666), new THREE.Vector2(1, 0.666), new THREE.Vector2(1, 1), new THREE.Vector2(0.5, 1)];\n  var f3 = [new THREE.Vector2(0, 0.333), new THREE.Vector2(0.5, 0.333), new THREE.Vector2(0.5, 0.666), new THREE.Vector2(0, 0.666)];\n  var f4 = [new THREE.Vector2(0.5, 0.333), new THREE.Vector2(1, 0.333), new THREE.Vector2(1, 0.666), new THREE.Vector2(0.5, 0.666)];\n  var f5 = [new THREE.Vector2(0, 0), new THREE.Vector2(0.5, 0), new THREE.Vector2(0.5, 0.333), new THREE.Vector2(0, 0.333)];\n  var f6 = [new THREE.Vector2(0.5, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 0.333), new THREE.Vector2(0.5, 0.333)];\n  // Init Uv\n  geometry.faceVertexUvs[0] = [];\n  // f1\n  geometry.faceVertexUvs[0][0] = [ f1[0], f1[1], f1[3] ];\n  geometry.faceVertexUvs[0][1] = [ f1[1], f1[2], f1[3] ];\n  // f2\n  geometry.faceVertexUvs[0][2] = [ f2[0], f2[1], f2[3] ];\n  geometry.faceVertexUvs[0][3] = [ f2[1], f2[2], f2[3] ];\n  // f3\n  geometry.faceVertexUvs[0][4] = [ f3[0], f3[1], f3[3] ];\n  geometry.faceVertexUvs[0][5] = [ f3[1], f3[2], f3[3] ];\n  // f4\n  geometry.faceVertexUvs[0][6] = [ f4[0], f4[1], f4[3] ];\n  geometry.faceVertexUvs[0][7] = [ f4[1], f4[2], f4[3] ];\n  // f5\n  geometry.faceVertexUvs[0][8] = [ f5[0], f5[1], f5[3] ];\n  geometry.faceVertexUvs[0][9] = [ f5[1], f5[2], f5[3] ];\n  // f6\n  geometry.faceVertexUvs[0][10] = [ f6[0], f6[1], f6[3] ];\n  geometry.faceVertexUvs[0][11] = [ f6[1], f6[2], f6[3] ];\n  // PLAYER\n  var player = new THREE.Mesh(geometry, material);\n  player.overdraw = true;\n  player.position.z = 2.5;\n\n  return player;\n}\n\nfunction addPlayer(user) {\n  if (socket.id !== user.name) {\n  // Players\n  players[user.name] = {\n    obj: new Player(),\n    name: socket.id,\n    position: {},\n    rotation: {}\n  };\n  players[user.name].obj = new Player();\n  players[user.name].obj.name = user;\n  // Init Position\n  players[user.name].obj.position.x = user.position.x;\n  players[user.name].obj.position.y = user.position.y;\n  players[user.name].obj.position.z = user.position.z;\n  // Init Rotation\n  players[user.name].obj.rotation.x = user.rotation._x;\n  players[user.name].obj.rotation.y = user.rotation._y;\n  players[user.name].obj.rotation.z = user.rotation._z;\n  // Add to scene\n  scene.add(players[user.name].obj);\n  }\n}\n\n// 1: INIT the current socket player\nsocket.on('initPlayer', function(){\n  // Player\n  players[socket.id] = {\n    obj: new Player(),\n    name: socket.id,\n    position: {},\n    rotation: {}\n  };\n  players[socket.id].name = socket.id;\n  scene.add(players[socket.id].obj);\n  // 2: INIT users\n  // Ask for all current users\n  socket.emit('initUsers');\n});\n\n// 2: INIT users\n// Get the users and init an instance for all of them\nsocket.on('initUsers', function(users){\n  // Loop on users\n  for (var user in users) {\n    addPlayer(users[user]);\n  }\n  // 3: ADD current socket player to the users array on the server\n  socket.emit('addUser', players[socket.id]);\n});\n\n// 4: ADD new user\nsocket.on('newUser', function(user) {\n  addPlayer(user);\n});\n\n// SET the positions of all current players\nsocket.on('setPosition', function(users) {\n  for (var user in users) {\n    if (players[user] && user !== socket.id) {\n      players[user].obj.position.x = users[user].position.x;\n      players[user].obj.position.y = users[user].position.y;\n      players[user].obj.position.z = users[user].position.z;\n      players[user].obj.rotation.x = users[user].rotation._x;\n      players[user].obj.rotation.y = users[user].rotation._y;\n      players[user].obj.rotation.z = users[user].rotation._z;\n    }\n  }\n});\n\n// DELETE the disconnected player\nsocket.on('deletePlayer', function(id) {\n  scene.remove(players[id].obj);\n  delete players[id];\n});\n\n\n// ANIMATE ALL\n// ----------------\nfunction animate() {\n  requestAnimationFrame(animate);\n  if (players[socket.id] !== undefined) {\n    // Set current socket player obj position and rotation\n    players[socket.id].position = players[socket.id].obj.position;\n    players[socket.id].rotation = players[socket.id].obj.rotation;\n    // Send the position of the current socket player to all players\n    socket.emit('sendPosition', players[socket.id]);\n    // Control the current socket player\n    moveObj(players[socket.id].obj, ctrlObj.speed, 38, 40);\n    rotateObj(players[socket.id].obj, ctrlObj.rotation, 37, 39);\n    // Camera follow the current socket player\n    cameraPos(camera, players[socket.id].obj);\n  }\n  render(setView.vrMode);\n}\n\n\n// ------------------------------------------\n// RENDER\n// ------------------------------------------\n\n// RENDER\nfunction render(mode) {\n  switch(setView.vrMode) {\n    case false:\n      renderer.render(scene, camera);\n      break;\n    case true:\n      effect.render(scene, camera);\n      break;\n    default:\n      renderer.render(scene, camera);\n  }\n  setWindowSize();\n}\n\n\n// ------------------------------------------\n// LAUNCH\n// ------------------------------------------\ninit();\nrender(setView.vrMode);\nanimate();\n\n\n// ------------------------------------------\n// STATS\n// ------------------------------------------\n(function(){var script=document.createElement('script');script.onload=function(){var stats=new Stats();stats.domElement.style.cssText='position:fixed;left:0;top:0;z-index:10000';document.body.appendChild(stats.domElement);requestAnimationFrame(function loop(){stats.update();requestAnimationFrame(loop);});};script.src='//rawgit.com/mrdoob/stats.js/master/build/stats.min.js';document.head.appendChild(script);})();\n\n"],"sourceRoot":"/source/"}