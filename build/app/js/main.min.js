function generateUUID(){var d=(new Date).getTime(),uuid="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=(d+16*Math.random())%16|0;return d=Math.floor(d/16),("x"==c?r:3&r|8).toString(16)});return uuid}function init(){scene=new THREE.Scene,camera=new THREE.PerspectiveCamera(55,window.innerWidth/window.innerHeight,.1,1e3),scene.add(camera),renderer=new THREE.WebGLRenderer({alpha:!0,antialias:!0}),renderer.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(renderer.domElement),effect=new THREE.StereoEffect(renderer),ambientLight=new THREE.AmbientLight(12303291),scene.add(ambientLight),directionalLight=new THREE.DirectionalLight(16777215),directionalLight.position.set(1,1,.5).normalize(),scene.add(directionalLight);var plane=new THREE.Mesh(new THREE.PlaneBufferGeometry(10,10),new THREE.MeshNormalMaterial);plane.overdraw=!0,scene.add(plane)}function setWindowSize(){switch(camera.aspect=window.innerWidth/window.innerHeight,setView.vrMode){case!1:renderer.setSize(window.innerWidth,window.innerHeight);break;case!0:effect.setSize(window.innerWidth,window.innerHeight);break;default:renderer.setSize(window.innerWidth,window.innerHeight)}camera.updateProjectionMatrix()}function Player(){var geometry=new THREE.BoxGeometry(5,5,5),material=new THREE.MeshPhongMaterial({map:THREE.ImageUtils.loadTexture("img/box-map.jpg")}),f1=[new THREE.Vector2(0,.666),new THREE.Vector2(.5,.666),new THREE.Vector2(.5,1),new THREE.Vector2(0,1)],f2=[new THREE.Vector2(.5,.666),new THREE.Vector2(1,.666),new THREE.Vector2(1,1),new THREE.Vector2(.5,1)],f3=[new THREE.Vector2(0,.333),new THREE.Vector2(.5,.333),new THREE.Vector2(.5,.666),new THREE.Vector2(0,.666)],f4=[new THREE.Vector2(.5,.333),new THREE.Vector2(1,.333),new THREE.Vector2(1,.666),new THREE.Vector2(.5,.666)],f5=[new THREE.Vector2(0,0),new THREE.Vector2(.5,0),new THREE.Vector2(.5,.333),new THREE.Vector2(0,.333)],f6=[new THREE.Vector2(.5,0),new THREE.Vector2(1,0),new THREE.Vector2(1,.333),new THREE.Vector2(.5,.333)];geometry.faceVertexUvs[0]=[],geometry.faceVertexUvs[0][0]=[f1[0],f1[1],f1[3]],geometry.faceVertexUvs[0][1]=[f1[1],f1[2],f1[3]],geometry.faceVertexUvs[0][2]=[f2[0],f2[1],f2[3]],geometry.faceVertexUvs[0][3]=[f2[1],f2[2],f2[3]],geometry.faceVertexUvs[0][4]=[f3[0],f3[1],f3[3]],geometry.faceVertexUvs[0][5]=[f3[1],f3[2],f3[3]],geometry.faceVertexUvs[0][6]=[f4[0],f4[1],f4[3]],geometry.faceVertexUvs[0][7]=[f4[1],f4[2],f4[3]],geometry.faceVertexUvs[0][8]=[f5[0],f5[1],f5[3]],geometry.faceVertexUvs[0][9]=[f5[1],f5[2],f5[3]],geometry.faceVertexUvs[0][10]=[f6[0],f6[1],f6[3]],geometry.faceVertexUvs[0][11]=[f6[1],f6[2],f6[3]];var player=new THREE.Mesh(geometry,material);return player.overdraw=!0,player}function addPlayer(user){socket.id!==user.name&&(players[user.name]={obj:new Player,name:user.name,position:new THREE.Vector3(user.position.x,user.position.y,user.position.z),rotation:new THREE.Vector3(user.rotation._x,user.rotation._y,user.rotation._z),lastPos:null,sequences:[]},players[user.name].obj.name=user.name,players[user.name].obj.position.copy(players[user.name].position),scene.add(players[user.name].obj),console.log("-------------------------------------------------"),console.log("PLAYER : "+players[user.name].name+" ADDED"),console.log(players[user.name].obj),console.log(players[user.name].lastPos),console.log("-------------------------------------------------"))}function cameraPos(o,t){o.position.x=t.position.x,o.position.y=t.position.y+-30,camera.position.z=35,camera.lookAt(t.position)}function rotateObj(o,s,a,b){var n=(keys[a]?s:0)+(keys[b]?-s:0);o.rotation.z+=n}function moveObj(o,s,a,b){var n=(keys[a]?a:0)+(keys[b]?b:0);(keys[a]||keys[b])&&socket.emit("movePlayer",o.name,n)}function movingObj(o,t,r,b,l){if(keys[t]||keys[r]||keys[b]||keys[l]){var sequenceUUID=generateUUID();socket.emit("movePlayer",o.name,keys,sequenceUUID),o.sequences.push(sequenceUUID);var posX=.75,posY=.75;posX=(keys[l]?-posX:0)+(keys[r]?posX:0),posY=(keys[t]?posY:0)+(keys[b]?-posY:0),o.obj.position.x+=posX,o.obj.position.y+=posY}}function animate(){requestAnimationFrame(animate);var now=Date.now();lastTime=now,void 0!==players[socket.id]&&(movingObj(players[socket.id],38,39,40,37),cameraPos(camera,players[socket.id].obj)),render(setView.vrMode)}function render(mode){switch(setView.vrMode){case!1:renderer.render(scene,camera);break;case!0:effect.render(scene,camera);break;default:renderer.render(scene,camera)}setWindowSize()}var socket=io(),scene,camera,renderer,effect,controls,ambientLight,directionalLight,cube,lastTime,setView={vrMode:!1},players={},keys={};document.addEventListener("keydown",function(e){keys[e.keyCode]=!0},!1),document.addEventListener("keyup",function(e){keys[e.keyCode]=!1},!1);var ctrlObj={rotation:.05,speed:.6};window.onload=function(){var gui=new dat.GUI;gui.add(ctrlObj,"rotation").min(0).max(.1).step(.01),gui.add(ctrlObj,"speed").min(0).max(1).step(.1),gui.add(setView,"vrMode")},socket.on("initPlayer",function(){players[socket.id]={obj:new Player,name:socket.id,position:new THREE.Vector3(0,0,2.5),rotation:new THREE.Vector3(0,0,0),lastPos:null,sequences:[]},players[socket.id].obj.name=players[socket.id].name,players[socket.id].obj.position.copy(players[socket.id].position),scene.add(players[socket.id].obj),console.log("-------------------------------------------------"),console.log("CURRENT SOCKET PLAYER : "+socket.id+" ADDED"),console.log(players[socket.id].obj),console.log(players[socket.id].lastPos),console.log("-------------------------------------------------"),socket.emit("initUsers")}),socket.on("initUsers",function(users){for(var user in users)addPlayer(users[user]);socket.emit("addUser",players[socket.id])}),socket.on("newUser",function(user){console.log(user),addPlayer(user)}),socket.on("deletePlayer",function(id){scene.remove(players[id].obj),console.log("PLAYER : "+id+" DELETED"),delete players[id]}),socket.on("movePlayer",function(name,position,sequence){sequence!==players[name].sequences[0]&&(players[name].obj.position.y=position.y,players[name].obj.position.x=position.x),players[name].sequences.shift()}),socket.on("setPosition",function(users){for(var user in users)players[user]&&user!==socket.id&&(players[user].lastPos!==users[user].position&&players[user].obj.position.copy(users[user].position),players[user].lastPos=users[user].position)}),init(),render(setView.vrMode),animate(),function(){var script=document.createElement("script");script.onload=function(){var stats=new Stats;stats.domElement.style.cssText="position:fixed;left:0;top:0;z-index:10000",document.body.appendChild(stats.domElement),requestAnimationFrame(function loop(){stats.update(),requestAnimationFrame(loop)})},script.src="//rawgit.com/mrdoob/stats.js/master/build/stats.min.js",document.head.appendChild(script)}();
//# sourceMappingURL=../maps/main.min.js.map