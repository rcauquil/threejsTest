{"version":3,"sources":["base.js"],"names":["init","scene","THREE","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","y","z","add","renderer","WebGLRenderer","alpha","antialias","setSize","document","body","appendChild","domElement","effect","StereoEffect","ambientLight","AmbientLight","directionalLight","DirectionalLight","set","normalize","geometry","BoxGeometry","materialSimple","MeshLambertMaterial","map","ImageUtils","loadTexture","material","MeshPhongMaterial","f1","Vector2","f2","f3","f4","f5","f6","faceVertexUvs","cube","Mesh","overdraw","plane","PlaneBufferGeometry","MeshNormalMaterial","controls","OrbitControls","addEventListener","render","target","noPan","noZoom","minPolarAngle","Math","PI","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","setWindowSize","aspect","setView","vrMode","updateProjectionMatrix","rotateObj","o","s","a","b","n","keys","rotation","moveObj","translateY","animate","requestAnimationFrame","ctrlObj","speed","update","mode","materialf3","e","keyCode","onload","gui","dat","GUI","min","max","step","script","createElement","stats","Stats","style","cssText","loop","src","head"],"mappings":"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","file":"main.min.js","sourcesContent":["// ------------------------------------------\n// VARS\n// ------------------------------------------\nvar scene, camera, renderer, effect;\nvar controls;\nvar material, materialf3;\nvar ambientLight, directionalLight;\nvar cube;\nvar setView = {\n  vrMode: false\n};\n\n// ------------------------------------------\n// KEYS\n// ------------------------------------------\nvar keys = {};\ndocument.addEventListener('keydown',function(e){keys[e.keyCode]=true;},false);\ndocument.addEventListener('keyup',function(e){keys[e.keyCode]=false;},false);\n\n\n// ------------------------------------------\n// CONTROL VIEW\n// ------------------------------------------\nvar ctrlObj = {\n  rotation: 0.05,\n  speed: 0.6\n};\n\nwindow.onload = function() {\n  var gui = new dat.GUI();\n  // Speed rotation\n  gui.add(ctrlObj, 'rotation').min(0).max(0.1).step(0.01);\n  gui.add(ctrlObj, 'speed').min(0).max(1).step(0.1);\n  // View\n  gui.add(setView, 'vrMode');\n};\n\n\n// ------------------------------------------\n// INIT\n// ------------------------------------------\nfunction init() {\n\n  scene = new THREE.Scene();\n\n  // CAMERA\n  // ---------------------\n  camera = new THREE.PerspectiveCamera(55, window.innerWidth / window.innerHeight, 0.1, 1000);\n  camera.position.y = -15;\n  camera.position.z = 20;\n  scene.add(camera);\n\n  // RENDERER\n  // ---------------------\n  renderer = new THREE.WebGLRenderer({\n    alpha: true,\n    antialias: true\n  });\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  document.body.appendChild(renderer.domElement);\n\n  // STEREOSCOPIC\n  // ---------------------\n  effect = new THREE.StereoEffect(renderer);\n\n  // LIGHTS\n  // ---------------------\n  // AMBIENT\n  ambientLight = new THREE.AmbientLight(0xbbbbbb);\n  scene.add(ambientLight);\n  // DIRECTIONAL lighting\n  directionalLight = new THREE.DirectionalLight(0xffffff);\n  directionalLight.position.set(1, 1, 0.5).normalize();\n  scene.add(directionalLight);\n\n  // GEOMETRIES\n  // ---------------------\n  var geometry = new THREE.BoxGeometry(5, 5, 5);\n\n  // MATERIALS\n  // ---------------------\n  // SIMPLE f3\n  materialSimple = new THREE.MeshLambertMaterial({\n    map: THREE.ImageUtils.loadTexture('assets/02-box.jpg')\n  });\n\n  // UV TEST\n  var material = new THREE.MeshPhongMaterial({\n    map: THREE.ImageUtils.loadTexture('img/box-map.jpg')\n  });\n  var f1 = [new THREE.Vector2(0, 0.666), new THREE.Vector2(0.5, 0.666), new THREE.Vector2(0.5, 1), new THREE.Vector2(0, 1)];\n  var f2 = [new THREE.Vector2(0.5, 0.666), new THREE.Vector2(1, 0.666), new THREE.Vector2(1, 1), new THREE.Vector2(0.5, 1)];\n  var f3 = [new THREE.Vector2(0, 0.333), new THREE.Vector2(0.5, 0.333), new THREE.Vector2(0.5, 0.666), new THREE.Vector2(0, 0.666)];\n  var f4 = [new THREE.Vector2(0.5, 0.333), new THREE.Vector2(1, 0.333), new THREE.Vector2(1, 0.666), new THREE.Vector2(0.5, 0.666)];\n  var f5 = [new THREE.Vector2(0, 0), new THREE.Vector2(0.5, 0), new THREE.Vector2(0.5, 0.333), new THREE.Vector2(0, 0.333)];\n  var f6 = [new THREE.Vector2(0.5, 0), new THREE.Vector2(1, 0), new THREE.Vector2(1, 0.333), new THREE.Vector2(0.5, 0.333)];\n\n  // Init Uv\n  geometry.faceVertexUvs[0] = [];\n  // f1\n  geometry.faceVertexUvs[0][0] = [ f1[0], f1[1], f1[3] ];\n  geometry.faceVertexUvs[0][1] = [ f1[1], f1[2], f1[3] ];\n  // f2\n  geometry.faceVertexUvs[0][2] = [ f2[0], f2[1], f2[3] ];\n  geometry.faceVertexUvs[0][3] = [ f2[1], f2[2], f2[3] ];\n  // f3\n  geometry.faceVertexUvs[0][4] = [ f3[0], f3[1], f3[3] ];\n  geometry.faceVertexUvs[0][5] = [ f3[1], f3[2], f3[3] ];\n  // f4\n  geometry.faceVertexUvs[0][6] = [ f4[0], f4[1], f4[3] ];\n  geometry.faceVertexUvs[0][7] = [ f4[1], f4[2], f4[3] ];\n  // f5\n  geometry.faceVertexUvs[0][8] = [ f5[0], f5[1], f5[3] ];\n  geometry.faceVertexUvs[0][9] = [ f5[1], f5[2], f5[3] ];\n  // f6\n  geometry.faceVertexUvs[0][10] = [ f6[0], f6[1], f6[3] ];\n  geometry.faceVertexUvs[0][11] = [ f6[1], f6[2], f6[3] ];\n\n  // OBJECTS\n  // ---------------------\n  // CUBE\n  cube = new THREE.Mesh(geometry, material);\n  cube.overdraw = true;\n  cube.position.z = 2.5;\n  scene.add(cube);\n  // PLANE\n  var plane = new THREE.Mesh(new THREE.PlaneBufferGeometry(10, 10), new THREE.MeshNormalMaterial());\n  plane.overdraw = true;\n  scene.add(plane);\n\n  // CONTROLS\n  // ---------------------\n  controls = new THREE.OrbitControls(camera);\n  controls.addEventListener('change', render);\n  controls.target.set(0,0,0);\n  controls.noPan = true;\n  controls.noZoom = false;\n  controls.minPolarAngle = 300 * Math.PI / 360;\n  controls.maxPolarAngle = 340 * Math.PI / 360;\n  controls.minAzimuthAngle = 0;\n  controls.maxAzimuthAngle = 0;\n}\n\n\n// ------------------------------------------\n// RESIZE SCREEN\n// ------------------------------------------\nfunction setWindowSize() {\n  camera.aspect = window.innerWidth / window.innerHeight;\n  switch(setView.vrMode) {\n    case false:\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      break;\n    case true:\n      effect.setSize(window.innerWidth, window.innerHeight);\n      break;\n    default:\n      renderer.setSize(window.innerWidth, window.innerHeight);\n  }\n  camera.updateProjectionMatrix();\n}\n\n\n// ------------------------------------------\n// ANIMATE\n// ------------------------------------------\n\n// ROTATE\nfunction rotateObj(o,s,a,b) {\n  var n = (keys[a] ? s : 0) + (keys[b] ? -s : 0);\n  o.rotation.z += n;\n}\n\n// MOVE\nfunction moveObj(o,s,a,b) {\n  var n = (keys[a] ? s : 0) + (keys[b] ? -s : 0);\n  o.translateY(n);\n}\n\n\n// ANIMATE ALL\n// ----------------\nfunction animate() {\n  requestAnimationFrame(animate);\n\n  moveObj(cube, ctrlObj.speed, 38, 40);\n  rotateObj(cube, ctrlObj.rotation, 37, 39);\n\n  controls.update();\n  render(setView.vrMode);\n}\n\n\n// ------------------------------------------\n// RENDER\n// ------------------------------------------\n\n// RENDER\nfunction render(mode) {\n  switch(setView.vrMode) {\n    case false:\n      renderer.render(scene, camera);\n      break;\n    case true:\n      effect.render(scene, camera);\n      break;\n    default:\n      renderer.render(scene, camera);\n  }\n  setWindowSize();\n}\n\n\n// ------------------------------------------\n// LAUNCH\n// ------------------------------------------\ninit();\nrender(setView.vrMode);\nanimate();\n\n\n// ------------------------------------------\n// STATS\n// ------------------------------------------\n(function(){var script=document.createElement('script');script.onload=function(){var stats=new Stats();stats.domElement.style.cssText='position:fixed;left:0;top:0;z-index:10000';document.body.appendChild(stats.domElement);requestAnimationFrame(function loop(){stats.update();requestAnimationFrame(loop);});};script.src='//rawgit.com/mrdoob/stats.js/master/build/stats.min.js';document.head.appendChild(script);})();\n\n"],"sourceRoot":"/source/"}